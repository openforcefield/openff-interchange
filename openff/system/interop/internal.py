from pathlib import Path
from typing import Union

import numpy as np
import parmed as pmd

from openff.system import unit
from openff.system.components.system import System

lookup_dict = dict((v, k) for k, v in pmd.periodic_table.AtomicNum.items())


def to_gro(openff_sys: System, file_path: Union[Path, str]):
    """
    Write a .gro file. See
    https://manual.gromacs.org/documentation/current/reference-manual/file-formats.html#gro
    for more details, including the recommended C-style one-liners

    This code is partially copied from InterMol, see
    https://github.com/shirtsgroup/InterMol/tree/v0.1/intermol/gromacs

    """
    with open(file_path, "w") as gro:
        gro.write("Generated by OpenFF System\n")
        gro.write(f"{len(openff_sys.positions)}\n")
        for idx, atom in enumerate(openff_sys.topology.topology_atoms):  # type: ignore
            atom_name = lookup_dict[atom.atomic_number] + str(idx + 1)
            # TODO: Make sure these are in nanometers
            pos = openff_sys.positions[idx].to(unit.nanometer).magnitude
            gro.write(
                # If writing velocities:
                # "\n%5d%-5s%5s%5d%8.3f%8.3f%8.3f%8.4f%8.4f%8.4f" % (
                "%5d%-5s%5s%5d%8.3f%8.3f%8.3f\n"
                % (
                    1 % 100000,  # residue index
                    "FOO",  # residue name
                    atom_name,
                    (idx + 1) % 100000,
                    pos[0],
                    pos[1],
                    pos[2],
                )
            )

        # TODO: Ensure nanometers
        box = openff_sys.box.to(unit.nanometer).magnitude
        # Check for rectangular
        if (box == np.diag(np.diagonal(box))).all():
            for i in range(3):
                gro.write("{0:11.7f}".format(box[i, i]))
        else:
            for i in range(3):
                gro.write("{0:11.7f}".format(box[i, i]))
            for i in range(3):
                for j in range(3):
                    if i != j:
                        gro.write("{0:11.7f}".format(box[i, j]))

        gro.write("\n")
