name: full_tests

on:
  push:
    branches:
      - master
  pull_request:
    branches:
      - master

jobs:
  test:
    runs-on: ${{ matrix.os }}
    strategy:
      fail-fast: false
      matrix:
        os: [ubuntu-latest]
        python-version: [3.7, 3.8, 3.9]
    env:
      OE_LICENSE: ${{ github.workspace }}/oe_license.txt
      COV: --cov=openff/interchange --cov-report=xml --cov-config=setup.cfg --cov-append

    steps:
    - uses: actions/checkout@v2.3.4

    - uses: conda-incubator/setup-miniconda@v2.1.1
      with:
        python-version: ${{ matrix.python-version }}
        environment-file: devtools/conda-envs/test_env.yaml
        activate-environment: test
        auto-activate-base: false
        mamba-version: "*"
        miniforge-version: latest
        miniforge-variant: Mambaforge
        use-mamba: true

    - name: Additional info about the build
      shell: bash
      run: |
        uname -a
        df -h
        ulimit -a

    - name: Environment Information
      shell: bash -l {0}
      run: |
        conda info
        conda list

    - name: Install package
      shell: bash -l {0}
      run: |
        python setup.py develop --no-deps

    - name: Clone ParmEd tests
      shell: bash -l {0}
      run: |
        git clone https://github.com/mattwthompson/tests
        cp -r tests/pmdtest .
        echo "PYTHONPATH=$(pwd)" >> $GITHUB_ENV

    - name: License OpenEye
      shell: bash -l {0}
      run: |
        echo "${SECRET_OE_LICENSE}" > ${OE_LICENSE}
        python -c "from openeye import oechem; assert oechem.OEChemIsLicensed()"
      env:
        SECRET_OE_LICENSE: ${{ secrets.OE_LICENSE }}

    - name: Run mypy
      shell: bash -l {0}
      run: |
        mypy --show-error-codes --warn-unused-configs --warn-unused-ignores --namespace-packages -p "openff.interchange"

    - name: Run docexamples
      shell: bash -l {0}
      run: |
        pytest -v --doctest-modules openff/interchange/ --ignore=openff/interchange/energy_tests --ignore=openff/interchange/unit_tests --ignore=openff/interchange/data --ignore=openff/interchange/interoperability_tests

    - name: Run all tests
      if: always()
      shell: bash -l {0}
      run: |
        python -m pytest -v -nauto $COV openff/interchange/

#    - name: Run ParmEd tests
#      continue-on-error: true
#      shell: bash -l {0}
#      run: |
#        python -m pytest -v $COV openff/interchange/tests/parmed

    - name: Run example notebooks
      shell: bash -l {0}
      run: |
        python -m pytest -v $COV examples/ --nbval-lax

    - name: Codecov
      uses: codecov/codecov-action@v2.1.0
      with:
        file: ./coverage.xml
        fail_ci_if_error: false
